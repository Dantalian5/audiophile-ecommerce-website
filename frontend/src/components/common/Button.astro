---
const {
  variant = 'accent',
  label = 'button',
  endContent = false,
  href = '/',
  size = 'sm',
  ...props
} = Astro.props;
---
{
  href ? (<a href={href} class=`button ${variant} ${size}`>
  <p class="button__text">{label}</p>
  {
    endContent && (
      <svg
        class="button__icon"
        xmlns="http://www.w3.org/2000/svg"
        width="7"
        height="12"
        viewBox="0 0 7 12"
        fill="none"
      >
        <path
          d="M1.32178 1L6.32178 6L1.32178 11"
          stroke="currentColor"
          stroke-width="2"
        />
      </svg>
    )
  }
</a>) : (<button class=`button ${variant} ${size}` {...props}>
  <p class="button__text">{label}</p>
  {
    endContent && (
      <svg
        class="button__icon"
        xmlns="http://www.w3.org/2000/svg"
        width="7"
        height="12"
        viewBox="0 0 7 12"
        fill="none"
      >
        <path
          d="M1.32178 1L6.32178 6L1.32178 11"
          stroke="currentColor"
          stroke-width="2"
        />
      </svg>
    )
  }
</button>)
}

<style lang="scss">
  .button {
    padding: 1rem 2rem;    
    border: 1px solid transparent;
    cursor: pointer;
    font-size: 0.8125rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    letter-spacing: 1px;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    position: relative;
    transition: transform 0.1s ease;
    &:active{
      transform: scale(0.95);
    }     
    &__text {
      font: inherit;
    }
    &__icon {
      color: var(--accent);
    }
    &.sm{
      width: fit-content;
    }
    &.lg{
      width: 100%;
    }
    &.bordered {
    background-color: transparent;
    border-color: var(--background-dark);
    color: var(--foreground-dark);
    &:hover {
      background-color: var(--background-dark);
      color: var(--foreground-light);
    }
  }
  &.flat {
    background-color: var(--background-dark);
    border-color: var(--background-dark);
    color: var(--foreground-light);
    &:hover {
      background-color: #4c4c4c;
      border-color: #4c4c4c;
    }
  }
    &.accent {
    background-color: var(--accent);
    border-color: var(--accent);
    color: var(--foreground-light);
    &:hover {
      opacity: 0.9;
    }
  }
    &.light {
    padding: 0;
    background-color: transparent;
    color: var(--foreground-dark);
    & p {
      opacity: 0.5;
    }
    &:hover {
      color: var(--accent);
      & p {
        opacity: 1;
      }
    }
  }
}
</style>
