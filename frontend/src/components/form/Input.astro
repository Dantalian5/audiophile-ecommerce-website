---
const {
  label = 'Label',
  placeholder = '',
  type = 'text',
  name = '',
  ...props
} = Astro.props;
---

<label class="label">
  {label}
  <input
    class=`input`
    type={type}
    placeholder={placeholder}
    name={name}
    data-state="valid"
    data-target="input-element"
    {...props}
  />
  <span class="label__error" data-target="input-element-error">error</span>
</label>

<style lang="scss">
  .label {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 0.5625rem;
    align-items: flex-start;
    justify-content: flex-start;

    color: var(--foreground-dark);
    font-size: 0.75rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    letter-spacing: -0.0156rem;
    position: relative;
    &__error {
      color: var(--error);
      font-size: 0.75rem;
      font-style: normal;
      font-weight: 400;
      line-height: normal;
      letter-spacing: -0.0134rem;
      position: absolute;
      top: 0;
      right: 0;
      display: none;
    }
  }
  .input {
    width: 100%;
    border-radius: 8px;
    border: 1px solid;
    border-color: var(--secondary-grey);
    background: transparent;
    padding: 1.125rem 1.5rem;

    color: var(--foreground-dark);
    font-size: 0.875rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    letter-spacing: -0.0156rem;
    outline: none;

    &::placeholder {
      opacity: 0.5;
    }
    &:focus {
      border-color: var(--accent);
      caret-color: var(--accent);
    }
    &[data-state='error'] {
      border-color: var(--error);
      & + .label__error {
        display: block;
      }
    }
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const inputs = document.querySelectorAll('[data-target="input-element"]');

    inputs.forEach((input) => {
      input.addEventListener('input', (event) => {
        const value = input.value;
        input.dataset.state = 'valid';
      });
    });
  });
</script>
